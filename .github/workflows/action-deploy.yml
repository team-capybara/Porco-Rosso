name: Deploy to S3 and CloudFront

on:
  push:
    branches:
    - dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-east-1'  # AWS 리전으로 수정
      S3_BUCKET: 'dev-s3-capybara'  # S3 버킷 이름으로 수정
      CLOUDFRONT_DISTRIBUTION_ID: 'E37SR1MTEBWHJE'  # CloudFront 배포 ID로 수정
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'  # 사용하는 Node.js 버전으로 수정

    - name: Install dependencies
      run: npm ci

    - name: Configure Git
      run: |
          git config --global user.email "zsda3131@naver.com"
          git config --global user.name "nuriring"

    - name: Determine version bump type
      id: bump
      run: |
        if git log -1 --pretty=%B | grep -q '^BIGBANG:'; then
          echo "::set-output name=version::major"
        elif git log -1 --pretty=%B | grep -q '^feat:'; then
          echo "::set-output name=version::minor"
        elif git log -1 --pretty=%B | grep -q '^fix:'; then
          echo "::set-output name=version::patch"
        else
          echo "::set-output name=version::none"
        fi

    - name: Bump version
      run: |
          VERSION_TYPE=${{ steps.bump.outputs.version }}
          if [ "$VERSION_TYPE" != "none" ]; then
            npm version $VERSION_TYPE --no-git-tag-version  # 태그 생성을 방지합니다.
            echo "Version bumped to $(node -p "require('./package.json').version")"
          fi

    - name: Commit version change
      run: |
        if [ "$(git status --porcelain)" ]; then
          git add package.json package-lock.json
          git commit -m "Bump version to $(node -p "require('./package.json').version")"
        else
          echo "No changes to commit."
        fi

    - name: Build project
      run: npm run build

    - name: Upload to S3
      run: |
        aws s3 sync dist/ s3://$S3_BUCKET --delete

    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"
